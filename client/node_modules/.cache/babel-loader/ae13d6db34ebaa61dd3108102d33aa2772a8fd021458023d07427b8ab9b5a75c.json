{"ast":null,"code":"var _jsxFileName = \"/Users/jaimemaldonado/Desktop/starwars-webapp/client/src/components/Toggle.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Toggle = props => {\n  _s();\n  const [isChecked, setIsChecked] = useState(props.isChecked);\n  const toggleRef = useRef(null); // Create a ref for the toggle switch\n\n  const toggleForm = value => {\n    setIsChecked(value);\n    const formToSwitchTo = isChecked ? \"register\" : \"login\";\n    props.onFormSwitch(formToSwitchTo);\n  };\n  const switchToRegister = () => {\n    props.onFormSwitch(isChecked ? \"login\" : \"register\");\n    setIsChecked(!isChecked);\n  };\n  const handleToggleClick = () => {\n    toggleForm(!isChecked);\n  };\n\n  // Function to click the toggle\n  const clickToggle = () => {\n    toggleRef.current.click(); // Simulate a click on the toggle switch\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"switches-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: \"switchOne\",\n        name: \"switchToggle\",\n        value: \"false\",\n        checked: !isChecked,\n        onChange: handleToggleClick,\n        ref: toggleRef // Assign the ref to the toggle switch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: \"switchTwo\",\n        name: \"switchToggle\",\n        value: \"true\",\n        checked: isChecked,\n        onChange: handleToggleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"switchOne\",\n        children: isChecked ? \"Log In\" : \"Returning User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"switchTwo\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"switch-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"switch\",\n          onClick: switchToRegister,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: isChecked ? \"Back\" : \"Returning User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Toggle, \"Kfi1ab5o6O7U7izTtbWmaVF0080=\");\n_c = Toggle;\nvar _c;\n$RefreshReg$(_c, \"Toggle\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","Toggle","props","_s","isChecked","setIsChecked","toggleRef","toggleForm","value","formToSwitchTo","onFormSwitch","switchToRegister","handleToggleClick","clickToggle","current","click","className","children","type","id","name","checked","onChange","ref","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","onClick","_c","$RefreshReg$"],"sources":["/Users/jaimemaldonado/Desktop/starwars-webapp/client/src/components/Toggle.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\n\nexport const Toggle = (props) => {\n  const [isChecked, setIsChecked] = useState(props.isChecked);\n  const toggleRef = useRef(null); // Create a ref for the toggle switch\n\n  const toggleForm = (value) => {\n    setIsChecked(value);\n    const formToSwitchTo = isChecked ? \"register\" : \"login\";\n    props.onFormSwitch(formToSwitchTo);\n  };\n\n  const switchToRegister = () => {\n    props.onFormSwitch(isChecked ? \"login\" : \"register\");\n    setIsChecked(!isChecked);\n  };\n\n  const handleToggleClick = () => {\n    toggleForm(!isChecked);\n  };\n\n  // Function to click the toggle\n  const clickToggle = () => {\n    toggleRef.current.click(); // Simulate a click on the toggle switch\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"switches-container\">\n        <input\n          type=\"radio\"\n          id=\"switchOne\"\n          name=\"switchToggle\"\n          value=\"false\"\n          checked={!isChecked}\n          onChange={handleToggleClick}\n          ref={toggleRef} // Assign the ref to the toggle switch\n        />\n        <input\n          type=\"radio\"\n          id=\"switchTwo\"\n          name=\"switchToggle\"\n          value=\"true\"\n          checked={isChecked}\n          onChange={handleToggleClick}\n        />\n        <label htmlFor=\"switchOne\">{isChecked ? \"Log In\" : \"Returning User\"}</label>\n        <label htmlFor=\"switchTwo\">Register</label>\n        <div className=\"switch-wrapper\">\n          <div className=\"switch\" onClick={switchToRegister}>\n            <div>{isChecked ? \"Back\" : \"Returning User\"}</div>\n            <div>Register</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}