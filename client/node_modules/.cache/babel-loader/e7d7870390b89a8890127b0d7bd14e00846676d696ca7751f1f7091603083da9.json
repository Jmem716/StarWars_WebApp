{"ast":null,"code":"var _jsxFileName = \"/Users/jaimemaldonado/Desktop/starwars-webapp/client/src/components/Toggle.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Toggle = props => {\n  _s();\n  const [isChecked, setIsChecked] = useState(false);\n  // Check the isPasswordReset prop to see if it's a password reset\n  const isPasswordReset = props.isPasswordReset;\n  const toggleForm = value => {\n    setIsChecked(value); // Set the isChecked state\n\n    // Use isChecked and isPasswordReset to determine which form to switch to\n    const formToSwitchTo = isChecked === false && isPasswordReset ? \"reset\" : isChecked ? \"register\" : \"login\";\n    props.onFormSwitch(formToSwitchTo);\n  };\n  const switchToRegister = () => {\n    props.onFormSwitch(isChecked === false ? \"register\" : \" \");\n    setIsChecked(true); // Set isChecked to false\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"switches-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: \"switchOne\",\n        name: \"switchToggle\",\n        value: \"false\",\n        checked: isChecked === false,\n        onChange: () => toggleForm(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: \"switchTwo\",\n        name: \"switchToggle\",\n        value: \"true\",\n        checked: isChecked === true,\n        onChange: () => toggleForm(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"switchOne\",\n        children: isChecked ? \"Log In\" : \"Returning User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"switchTwo\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"switch-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"switch\",\n          onClick: switchToRegister,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: isChecked ? \"Back\" : \"Returning User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(Toggle, \"ZhOKOS+Td3oentFkMpi7jRDXPaI=\");\n_c = Toggle;\nvar _c;\n$RefreshReg$(_c, \"Toggle\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Toggle","props","_s","isChecked","setIsChecked","isPasswordReset","toggleForm","value","formToSwitchTo","onFormSwitch","switchToRegister","className","children","type","id","name","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","onClick","_c","$RefreshReg$"],"sources":["/Users/jaimemaldonado/Desktop/starwars-webapp/client/src/components/Toggle.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nexport const Toggle = (props) => {\n    const [isChecked, setIsChecked] = useState(false);\n    // Check the isPasswordReset prop to see if it's a password reset\n    const isPasswordReset = props.isPasswordReset;\n\n    const toggleForm = (value) => {\n        setIsChecked(value); // Set the isChecked state\n\n       // Use isChecked and isPasswordReset to determine which form to switch to\n       const formToSwitchTo = (isChecked === false && isPasswordReset) ? \"reset\" : (isChecked ? \"register\" : \"login\");\n       props.onFormSwitch(formToSwitchTo);\n    };\n\n    const switchToRegister = () => {\n        props.onFormSwitch(isChecked === false ? \"register\" : \" \");\n        setIsChecked(true); // Set isChecked to false\n    };\n\n    return (\n        <div className=\"container\">\n            <div className=\"switches-container\">\n                <input\n                    type=\"radio\"\n                    id=\"switchOne\"\n                    name=\"switchToggle\"\n                    value=\"false\"\n                    checked={isChecked === false}\n                    onChange={() => toggleForm(false)}\n                />\n                <input\n                    type=\"radio\"\n                    id=\"switchTwo\"\n                    name=\"switchToggle\"\n                    value=\"true\"\n                    checked={isChecked === true}\n                    onChange={() => toggleForm(true)}\n                />\n                <label htmlFor=\"switchOne\">{isChecked ? \"Log In\" : \"Returning User\"}</label>\n                <label htmlFor=\"switchTwo\">Register</label>\n                <div className=\"switch-wrapper\">\n                    <div className=\"switch\" onClick={switchToRegister}>\n                        <div>{isChecked ? \"Back\" : \"Returning User\"}</div>\n                        <div>Register</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}