{"ast":null,"code":"var _jsxFileName = \"/Users/jaimemaldonado/Desktop/starwars-webapp/client/src/components/Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Input = ({\n  label,\n  id,\n  type,\n  value,\n  onChange\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"register-input\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-input-inner\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: id,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: id,\n      className: \"aurebesh-font\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n    value: value,\n    onChange: onChange,\n    id: id,\n    type: type,\n    name: id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 5\n}, this);\n_c = Input;\nexport const Register = props => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [username, setUserName] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const validateForm = () => {\n    if (!username || !email || !pass || !confirmPassword) {\n      throw new Error(\"Please ensure to enter all fields.\");\n    }\n    if (pass !== confirmPassword) {\n      throw new Error(\"Passwords do not match.\");\n    }\n  };\n  const callApi = async () => {\n    const apiUrl = \"http://localhost:3000/auth/register\";\n    const requestBody = {\n      username: username,\n      password: pass,\n      email: email\n    };\n    const response = await fetch(apiUrl, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(requestBody)\n    });\n    if (!response.ok) {\n      throw new Error(\"Username or email already in use. Please choose a different one.\");\n    }\n    return response.json();\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      validateForm();\n      const apiData = await callApi();\n      if (apiData) setError(null);\n      setSuccess('User successfully created. Please login.');\n      setTimeout(() => setSuccess(null), 5000);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"register-form\",\n      onSubmit: handleSubmit,\n      children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 27\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          label: \"Username\",\n          id: \"username\",\n          type: \"text\",\n          value: username,\n          onChange: e => setUserName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          label: \"Email\",\n          id: \"email\",\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          label: \"Password\",\n          id: \"password\",\n          type: \"password\",\n          value: pass,\n          onChange: e => setPass(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          label: \"Confirm\",\n          id: \"setpassword\",\n          type: \"password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Register, \"nS2VVtc5Hfj85L5RO8SyDuvZm+8=\");\n_c2 = Register;\nvar _c, _c2;\n$RefreshReg$(_c, \"Input\");\n$RefreshReg$(_c2, \"Register\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Input","label","id","type","value","onChange","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","name","_c","Register","props","_s","email","setEmail","username","setUserName","pass","setPass","confirmPassword","setConfirmPassword","error","setError","success","setSuccess","validateForm","Error","callApi","apiUrl","requestBody","password","response","fetch","method","headers","body","JSON","stringify","ok","json","handleSubmit","e","preventDefault","apiData","setTimeout","err","message","onSubmit","target","_c2","$RefreshReg$"],"sources":["/Users/jaimemaldonado/Desktop/starwars-webapp/client/src/components/Register.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst Input = ({ label, id, type, value, onChange }) => (\n    <div className=\"register-input\">\n        <div className=\"register-input-inner\">\n            <label htmlFor={id}>{label}</label>\n            <label htmlFor={id} className=\"aurebesh-font\">\n                {label}\n            </label>\n        </div>\n        <input value={value} onChange={onChange} id={id} type={type} name={id} />\n    </div>\n);\n\nexport const Register = (props) => {\n    const [email, setEmail] = useState(\"\");\n    const [username, setUserName] = useState(\"\");\n    const [pass, setPass] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [error, setError] = useState(null);\n    const [success, setSuccess] = useState(null);\n\n    const validateForm = () => {\n        if (!username || !email || !pass || !confirmPassword) {\n            throw new Error(\"Please ensure to enter all fields.\");\n        }\n        if (pass !== confirmPassword) {\n            throw new Error(\"Passwords do not match.\");\n        }\n    };\n\n    const callApi = async () => {\n        const apiUrl = \"http://localhost:3000/auth/register\";\n        const requestBody = {\n            username: username,\n            password: pass,\n            email: email,\n        };\n\n        const response = await fetch(apiUrl, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(requestBody),\n        });\n\n        if (!response.ok) {\n            throw new Error(\"Username or email already in use. Please choose a different one.\");\n        }\n\n        return response.json();\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        try {\n            validateForm();\n            const apiData = await callApi();\n            if(apiData)\n                setError(null)\n                setSuccess('User successfully created. Please login.');\n                setTimeout(() => setSuccess(null), 5000);\n        } catch (err) {\n            setError(err.message);\n        }\n    };\n\n    return (\n        <>\n            <form className=\"register-form\" onSubmit={handleSubmit}>\n                {error && <div className=\"error-message\">{error}</div>}\n                {success && <div className=\"success-message\">{success}</div>}\n                <div>\n                    <Input\n                        label=\"Username\"\n                        id=\"username\"\n                        type=\"text\"\n                        value={username}\n                        onChange={(e) => setUserName(e.target.value)}\n                    />\n                    <Input\n                        label=\"Email\"\n                        id=\"email\"\n                        type=\"email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    />\n                    <Input\n                        label=\"Password\"\n                        id=\"password\"\n                        type=\"password\"\n                        value={pass}\n                        onChange={(e) => setPass(e.target.value)}\n                    />\n                    <Input\n                        label=\"Confirm\"\n                        id=\"setpassword\"\n                        type=\"password\"\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    />\n                </div>\n                <div className=\"btn-container\">\n                    <button type=\"submit\">Continue</button>\n                </div>\n            </form>\n        </>\n    );\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}