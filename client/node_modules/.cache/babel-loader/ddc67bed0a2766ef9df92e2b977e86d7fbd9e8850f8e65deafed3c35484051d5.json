{"ast":null,"code":"var _jsxFileName = \"/Users/jaimemaldonado/Desktop/starwars-webapp/client/src/components/Toggle.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Toggle = props => {\n  _s();\n  const [isChecked, setIsChecked] = useState(false);\n  const toggleForm = value => {\n    setIsChecked(value); // Set the isChecked state\n\n    // Use isChecked to determine which form to switch to\n    const formToSwitchTo = value === false ? \"login\" : \"register\";\n    props.onFormSwitch(formToSwitchTo);\n  };\n  const switchToRegister = () => {\n    props.onFormSwitch(isChecked === false ? \"register\" : \" \");\n    setIsChecked(true); // Set isChecked to false\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"switches-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: \"switchOne\",\n        name: \"switchToggle\",\n        value: \"false\",\n        checked: isChecked === false,\n        onChange: () => toggleForm(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: \"switchTwo\",\n        name: \"switchToggle\",\n        value: \"true\",\n        checked: isChecked === true,\n        onChange: () => toggleForm(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"switchOne\",\n        children: isChecked ? \"Log In\" : \"Returning User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"switchTwo\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"switch-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"switch\",\n          onClick: switchToRegister,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: isChecked ? \"Back\" : \"Returning User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Forgot Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(Toggle, \"ZhOKOS+Td3oentFkMpi7jRDXPaI=\");\n_c = Toggle;\nvar _c;\n$RefreshReg$(_c, \"Toggle\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Toggle","props","_s","isChecked","setIsChecked","toggleForm","value","formToSwitchTo","onFormSwitch","switchToRegister","className","children","type","id","name","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","onClick","_c","$RefreshReg$"],"sources":["/Users/jaimemaldonado/Desktop/starwars-webapp/client/src/components/Toggle.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nexport const Toggle = (props) => {\n    const [isChecked, setIsChecked] = useState(false);\n\n    const toggleForm = (value) => {\n        setIsChecked(value); // Set the isChecked state\n\n        // Use isChecked to determine which form to switch to\n        const formToSwitchTo = value === false ? \"login\" : \"register\";\n        props.onFormSwitch(formToSwitchTo);\n    };\n\n    const switchToRegister = () => {\n        props.onFormSwitch(isChecked === false ? \"register\" : \" \");\n        setIsChecked(true); // Set isChecked to false\n    };\n\n    return (\n        <div className=\"container\">\n            <div className=\"switches-container\">\n                <input\n                    type=\"radio\"\n                    id=\"switchOne\"\n                    name=\"switchToggle\"\n                    value=\"false\"\n                    checked={isChecked === false}\n                    onChange={() => toggleForm(false)}\n                />\n                <input\n                    type=\"radio\"\n                    id=\"switchTwo\"\n                    name=\"switchToggle\"\n                    value=\"true\"\n                    checked={isChecked === true}\n                    onChange={() => toggleForm(true)}\n                />\n                <label htmlFor=\"switchOne\">{isChecked ? \"Log In\" : \"Returning User\"}</label>\n                <label htmlFor=\"switchTwo\">Register</label>\n                <div className=\"switch-wrapper\">\n                    <div className=\"switch\" onClick={switchToRegister}>\n                        <div>{isChecked ? \"Back\" : \"Returning User\"}</div>\n                        <div>Forgot Password</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}